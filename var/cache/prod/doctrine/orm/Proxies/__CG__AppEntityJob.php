<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Job extends \App\Entity\Job implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'code', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'datePublished', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'jobStartDate', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'RecruteurId', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'candidats', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'City', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'TypeContrat', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'postulers'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'code', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'datePublished', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'jobStartDate', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'RecruteurId', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'candidats', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'City', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'TypeContrat', '' . "\0" . 'App\\Entity\\Job' . "\0" . 'postulers'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Job $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode(string $code): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePublished(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePublished', []);

        return parent::getDatePublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePublished(\DateTimeInterface $datePublished): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePublished', [$datePublished]);

        return parent::setDatePublished($datePublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobStartDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobStartDate', []);

        return parent::getJobStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobStartDate(\DateTimeInterface $jobStartDate): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobStartDate', [$jobStartDate]);

        return parent::setJobStartDate($jobStartDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecruteurId(): ?\App\Entity\Recruteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecruteurId', []);

        return parent::getRecruteurId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecruteurId(?\App\Entity\Recruteur $RecruteurId): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecruteurId', [$RecruteurId]);

        return parent::setRecruteurId($RecruteurId);
    }

    /**
     * {@inheritDoc}
     */
    public function formatedForView()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'formatedForView', []);

        return parent::formatedForView();
    }

    /**
     * {@inheritDoc}
     */
    public function getCandidats(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCandidats', []);

        return parent::getCandidats();
    }

    /**
     * {@inheritDoc}
     */
    public function addCandidat(\App\Entity\Candidat $candidat): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCandidat', [$candidat]);

        return parent::addCandidat($candidat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCandidat(\App\Entity\Candidat $candidat): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCandidat', [$candidat]);

        return parent::removeCandidat($candidat);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(string $City): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$City]);

        return parent::setCity($City);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeContrat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeContrat', []);

        return parent::getTypeContrat();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeContrat(string $TypeContrat): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeContrat', [$TypeContrat]);

        return parent::setTypeContrat($TypeContrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostulers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostulers', []);

        return parent::getPostulers();
    }

    /**
     * {@inheritDoc}
     */
    public function addPostuler(\App\Entity\JobPostuler $postuler): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPostuler', [$postuler]);

        return parent::addPostuler($postuler);
    }

    /**
     * {@inheritDoc}
     */
    public function removePostuler(\App\Entity\JobPostuler $postuler): \App\Entity\Job
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePostuler', [$postuler]);

        return parent::removePostuler($postuler);
    }

    /**
     * {@inheritDoc}
     */
    public function estPostuleParCandidat(\App\Entity\Candidat $candidat): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'estPostuleParCandidat', [$candidat]);

        return parent::estPostuleParCandidat($candidat);
    }

}
