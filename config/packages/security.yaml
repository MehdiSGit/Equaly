security:
    encoders:
        App\Entity\Candidat:
            algorithm: auto
        App\Entity\Recruteur:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        candidat_provider:
            entity:
                class: App\Entity\Candidat
                property: email

        recruteur_provider:
            entity:
                class: App\Entity\Recruteur
                property: email
        
        candidat_recruteur_provider:
            chain:
                providers: [candidat_provider, recruteur_provider]
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            #lazy: true
            provider: candidat_recruteur_provider
            # guard permet d'avoir un pouvoir d'action sur la fa√ßon de connecter les utilisateurs
            guard:
                authenticators:
                    - App\Security\CandidatRecruteurAuthenticator
            logout:
                path: app_logout
                target: home
                # where to redirect after logout
                # target: app_any_route     
           
                   
                    

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
